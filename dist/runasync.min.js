/*
 * RunAsync v0.3.3 - 2013-02-05
 * 
 * Library that allows you to execute JavaScript asynchronously
 * seamlessly using modern browser capabilities
 * 
 * https://github.com/ricmrodrigues/runasync
 * Copyright (c) 2013 @ricmrodrigues
 * Licensed MIT
 */
var Promise=function(){function e(){var t=this,n=[],r=null,i=!1,s=null;this._resolve=function(e){i=!0,s=e||s;while(n.length)n.shift().apply(null,[s]);r&&(r.apply(null,[s]),r=null)},this.result=function(){return s},this.when=function(e){if(!e||typeof e!=typeof Function)throw"callback must be a function";return n.push(e),i&&t._resolve(),this},this.continueWith=function(t){if(!t||typeof t!=typeof Function)throw"continuation must be a function";var n=new e;return r=function(e){Task.run(t,[e]).when(function(e){n._resolve(e)})},n}}return e}(),Task=function(Promise){"use strict";var BlobBuilder=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,url=window.URL||window.webkitURL;if(!BlobBuilder&&!Blob)throw"this browser does not support RunAsync";return{run:function(task,params){var blob=null,promise=new Promise,dispatcher=function(e,t){postMessage({done:!1,result:e.toString(),params:t})},finalizer=function(e){postMessage({done:!0,result:e})},func="onmessage = function(e) { var dispatch = "+dispatcher.toString()+"; var taskResult = ("+task.toString()+").apply(null, e.data); var finalizer = ("+finalizer.toString()+")(taskResult); }";if(typeof Blob==typeof Function)blob=new Blob([func],{type:"text/javascript"});else{var bb=new BlobBuilder;bb.append(func),blob=bb.getBlob("text/javascript")}var blobUrl=url.createObjectURL(blob),worker=new Worker(blobUrl);return worker.onmessage=function(e){e.data.done?promise._resolve(e.data.result):eval("("+e.data.result+").apply(null, "+JSON.stringify(e.data.params)+");")},worker.postMessage(params),promise}}}(Promise);