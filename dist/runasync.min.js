/*
 * RunAsync v0.2.0 - 2013-01-24
 * 
 * Library that allows you to execute JavaScript asynchronously
 * seamlessly using modern browser capabilities
 * 
 * https://github.com/ricmrodrigues/runasync
 * Copyright (c) 2013 @ricmrodrigues
 * Licensed MIT
 */
var Promise=function(){function e(){var e=this,t=[],n=!1,r=null;this._resolve=function(e){n=!0,r=e||r;if(t.length)for(var i=0;i<t.length;i++)t[i].apply(null,[r])},this.continueWith=function(r){if(!r||typeof r!=typeof Function)throw"callback must be a function";return t.push(r),n&&e._resolve(),this}}return e}(),Task=function(e){"use strict";var t=window.BlobBuilder||window.WebKitBlobBuilder||window.MozBlobBuilder||window.MSBlobBuilder,n=window.URL||window.webkitURL;if(!t&&!Blob)throw"this browser does not support Task.Run";return{run:function(r,i){var s=null,o=new e,u="onmessage = function(e) { var taskResult = ("+r.toString()+")(e.data); postMessage(taskResult); }";if(Blob)s=new Blob([u],{type:"text/javascript"});else{var a=new t;a.append(u),s=a.getBlob("text/javascript")}var f=n.createObjectURL(s),l=new Worker(f);return l.onmessage=function(e){o._resolve(e.data)},l.postMessage(i),o}}}(Promise);